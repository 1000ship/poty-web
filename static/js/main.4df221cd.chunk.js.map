{"version":3,"sources":["Components/Header.js","api.js","Components/VideoThumbnail.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Theater/Highlight.js","Routes/Theater/TheaterPresenter.js","Routes/Theater/index.js","Routes/Theater/TheaterContainer.js","Components/Router.js","GlobalStyles.js","Components/App.js","serviceWorker.js","index.js"],"names":["HeaderContainer","styled","div","withRouter","props","location","pathname","Container","Row","Col","to","videoAxios","axios","create","baseURL","params","key","process","videoApi","maxResults","regionCode","get","part","chart","highlightApi","videoId","ThumbnailImage","img","id","thumbnailSrc","title","channelTitle","channelId","src","VideosContainer","HomePresenter","videos","loading","length","map","video","i","snippet","thumbnails","localized","xs","md","lg","VideoThumbnail","medium","url","HomeContainer","state","data","items","console","log","this","setState","React","Component","CommentContainer","CommentUserId","CommentText","CommentLikeCount","Comment","userId","likeCount","commentText","TimestampButton","a","Timestamp","span","LikeDisplay","Comments","Highlight","lastUpdate","rank","totalLikeCount","totalReplyComment","timestamp","comments","youtubeSeekTo","second","multiply","arr","split","Number","href","onClick","e","timestampToSecond","comment","TheaterPresenter","highlights","youtubeReady","youtubeOpts","className","opts","onReady","xd","highlight","TheaterContainer","youtubePlayer","width","height","playerVars","autoplay","enablejsapi","modestbranding","pathArray","target","seconds","allowSeekAhead","seekTo","bind","path","exact","component","Home","Theater","createGlobalStyle","reset","App","Router","GlobalStyles","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4df221cd.chunk.js","sourcesContent":["import React from 'react'\nimport { withRouter, Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap'\nimport styled from \"styled-components\";\n\nconst HeaderContainer = styled.div`\ncolor: white;\nbackground-color: black;\npadding: 10px;\nfont-size: 40px;\n`\n\nconst Header = props => {\n    const { location : { pathname } } = props\n    return (\n    <HeaderContainer>\n        <Container>\n            <Row>\n                <Col>\n                    <Link to=\"/\">POTY</Link>\n                </Col>\n            </Row>\n        </Container>\n    </HeaderContainer>\n)}\n\nexport default withRouter( Header )","import axios from 'axios'\n\nconst videoAxios = axios.create({\n    baseURL: \"https://www.googleapis.com/youtube/v3/\",\n    params: {\n        key: process.env.REACT_APP_YOUTUBE_API_KEY,\n    },\n});\n\nexport const videoApi = {\n    getVideos: ({maxResults, regionCode}) => videoAxios.get(\"videos\", {\n        params: {\n            part: \"id,snippet\",\n            chart: \"mostPopular\",\n            maxResults,\n            regionCode\n        }\n    }),\n}\n\nexport const highlightApi = {\n    getHighlights: ( videoId ) => {return [{\n        \"videoId\": videoId,\n        \"lastUpdate\": \"2020-04-25\",\n        \"rank\": 1,\n        \"totalLikeCount\": 511,\n        \"totalReplyComment\": 20,\n        \"timestamp\": \"00:25:22\",\n        \"comments\":[\n            {\n                \"userId\":\"SomeUserName\",\n                \"likeCount\":123,\n                \"commentText\": \"명장명 키\"\n            },\n            {\n                \"userId\":\"PingPong\",\n                \"likeCount\":123,\n                \"commentText\": \"잠깐 보던거 킵 ㅠㅠ\"\n            }],\n        },\n        {\n            \"videoId\": videoId,\n            \"lastUpdate\": \"2020-04-25\",\n            \"rank\": 2,\n            \"totalLikeCount\": 102,\n            \"totalReplyComment\": 12,\n            \"timestamp\": \"00:12:42\",\n            \"comments\":[\n                {\n                    \"userId\":\"CSH\",\n                    \"likeCount\":52,\n                    \"commentText\": \"꿀잼\"\n                },\n                {\n                    \"userId\":\"WOW\",\n                    \"likeCount\":50,\n                    \"commentText\": \"...? 무엇\"\n            }],\n        }\n    ]}\n}","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nconst Container = styled.div`\n    width: 100%;\n`\n\nconst ThumbnailImage = styled.img`\n    width: 100%;\n`\n\nexport default ( {id, thumbnailSrc, title, channelId, channelTitle} ) => (\n<Container>\n    <Link to={`/video/${id}`}>\n        <ThumbnailImage src={thumbnailSrc}/>\n        <div>{title}</div>\n        <div>{channelTitle}</div>\n    </Link>\n</Container>\n)","import React from 'react'\nimport styled from 'styled-components'\nimport VideoThumbnail from 'Components/VideoThumbnail'\nimport { Container, Row, Col } from 'reactstrap'\n\n\nconst VideosContainer = styled(Row)`\n`\n\nconst HomePresenter = ({videos, loading}) => loading ? (<h1>Loading</h1>) : (\n    <Container>\n        <VideosContainer>\n        {videos && videos.length > 0 && videos.map( (video, i) => {\n                const {id, snippet:{thumbnails, localized, channelId, channelTitle}} = video\n                return <Col xs=\"6\" md=\"4\" lg=\"3\">\n                    <VideoThumbnail\n                        key={i}\n                        id={id}\n                        thumbnailSrc={thumbnails.medium.url}\n                        title={localized.title}\n                        channelId={channelId}\n                        channelTitle={channelTitle}\n                    ></VideoThumbnail>\n                </Col>\n                }\n            )\n        }\n        </VideosContainer>\n    </Container>\n)\n\nexport default HomePresenter","import React from 'react'\nimport HomeContainer from './HomeContainer'\n\nexport default HomeContainer","import React from 'react'\nimport { videoApi } from 'api'\nimport HomePresenter from './HomePresenter'\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            videos: [],\n            loading: true\n        }\n    }\n\n    async componentDidMount() {\n        try{\n            const {data: {items: videos}} = await videoApi.getVideos({\n                maxResults: 24,\n            })\n            console.log( videos )\n            this.setState({videos})\n        }\n        catch {\n\n        }\n        finally {\n            this.setState({\n                loading: false\n            })\n        }\n    }\n\n    render() {\n        const {videos, loading} = this.state\n        return <HomePresenter \n                    videos={videos}\n                    loading={loading}/>\n    }\n}","import React from 'react'\nimport styled from 'styled-components'\nimport {Row, Col} from 'reactstrap'\n\nconst CommentContainer = styled.div`\n    margin-bottom: 10px;\n`\n\nconst CommentUserId = styled.div`\n    font-weight: 500;\n    font-size: 18px;\n`\n\nconst CommentText = styled.div`\n`\n\nconst CommentLikeCount = styled.div`\n    font-weight: 500;\n    color: #666;\n`\n\nconst Comment = ({userId, likeCount, commentText}) => {\n    return <CommentContainer>\n        <CommentUserId>{userId}</CommentUserId>\n        <CommentText>{commentText}</CommentText>\n        <CommentLikeCount>👍{likeCount}</CommentLikeCount>\n    </CommentContainer>\n}\n\nconst Container = styled.div`\n    margin: 15px 3px;\n`\n\nconst TimestampButton = styled.a`\n    &:hover {\n        text-decoration: none;\n    }\n`\n\nconst Timestamp = styled.span`\n    color: #5d9cec;\n    font-weight: 600;\n    font-size: 20px;\n    margin-bottom: 3px;\n    margin-right: 5px;\n`\n\nconst LikeDisplay = styled.span`\n    font-weight: 500;\n    color: #666;\n`\n\nconst Comments = styled.div`\n    margin-left: 10px;\n    margin-top: 10px;\n`\n\nclass Highlight extends React.Component {\n    constructor( props )\n    {\n        super( props )\n        this.state = {\n            videoId: props.videoId,\n            lastUpdate: props.lastUpdate,\n            rank: props.rank,\n            totalLikeCount: props.totalLikeCount,\n            totalReplyComment: props.totalReplyComment,\n            timestamp: props.timestamp,\n            comments: props.comments,\n            youtubeSeekTo: props.youtubeSeekTo,\n        }\n    }\n\n    timestampToSecond ( timestamp )\n    {\n        let second = 0\n        let multiply = 1\n        let arr = timestamp.split(\":\")\n        for( let i = arr.length - 1; i >= 0; -- i )\n        {\n            second += multiply * Number(arr[i])\n            multiply *= 60\n        }\n        return second\n    }\n\n    render () {\n        const { videoId, lastUpdate, rank, totalLikeCount, totalReplyComment, timestamp, comments, youtubeSeekTo } = this.state\n        console.log( comments )\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        1위\n                        <TimestampButton href=\"#\" onClick={(e)=>youtubeSeekTo(this.timestampToSecond(timestamp), true)}>\n                            <Timestamp>\n                                {timestamp}\n                            </Timestamp>\n                        </TimestampButton>\n                        <LikeDisplay>\n                            {`👍${totalLikeCount}`}\n                        </LikeDisplay>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Comments>\n                            {comments.map( comment => \n                                <Comment\n                                    userId={comment.userId}\n                                    likeCount={comment.likeCount}\n                                    commentText = {comment.commentText}\n                                ></Comment>\n                            )}\n                        </Comments>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default Highlight","import React from 'react'\nimport {Container, Row, Col} from 'reactstrap'\nimport styled from \"styled-components\";\nimport YouTube from 'react-youtube';\nimport Highlight from './Highlight'\n\n\nconst TheaterPresenter = ( { videoId, highlights, youtubeSeekTo, youtubeReady, youtubeOpts, loading } ) => (\n    <Container className=\"pt-2\">\n        <Row>\n            <Col xs=\"12\" md=\"8\" lg=\"9\" className=\"embed-responsive embed-responsive-16by9\">\n                {loading ? <>asd</> : (\n                    <YouTube videoId={videoId} opts={youtubeOpts} onReady={youtubeReady}/>\n                )}\n            </Col>\n            <Col xd=\"12\" md=\"4\" lg=\"3\">\n                { highlights && \n                    highlights.map( highlight =>\n                        <Highlight \n                            videoId={highlight.videoId}\n                            lastUpdate={highlight.lastUpdate}\n                            rank={highlight.rank}\n                            totalLikeCount={highlight.totalLikeCount}\n                            totalReplyComment={highlight.totalReplyComment}\n                            timestamp={highlight.timestamp}\n                            comments={highlight.comments}\n                            youtubeSeekTo={youtubeSeekTo}\n                        />\n                    )\n                }\n            </Col>\n        </Row>\n        <Row>\n            <Col xs=\"12\">\n                Comments List\n            </Col>\n        </Row>\n    </Container>\n)\n\nexport default TheaterPresenter;","import TheaterContainer from './TheaterContainer'\n\nexport default TheaterContainer","import React from 'react'\nimport TheaterPresenter from './TheaterPresenter'\nimport {highlightApi} from 'api'\n\nexport default class extends React.Component {\n\n    state = {\n        videoId: \"\",\n        highlights: [],\n        youtubePlayer: null,\n        youtubeOpts: {\n            width: \"100%\",\n            height: \"100%\",\n            playerVars: {\n                // https://developers.google.com/youtube/player_parameters\n                autoplay: 1,\n                enablejsapi: 1,\n                modestbranding: 1,\n            //   rel: 0,\n            //   showinfo: 0,\n            //   playlist: [],\n            },\n        },\n        loading: true,\n    }\n\n    constructor ( props ) {\n        super(props)\n    }\n\n    componentDidMount(props) {\n        const {location: {pathname}} = this.props\n        const pathArray = pathname.split('/')\n        const videoId = pathArray[pathArray.length-1]\n        \n        try {\n            console.log(highlightApi.getHighlights(videoId))\n            const highlights = highlightApi.getHighlights(videoId)\n            this.setState({\n                highlights, videoId\n            })\n        }\n        catch ( e ) {\n\n        }\n        finally {\n            this.setState({\n                loading: false\n            })\n        }\n    }\n\n    youtubeReady ( e )\n    {\n        this.setState( {\n            youtubePlayer: e.target\n        })\n    }\n\n    youtubeSeekTo ( seconds, allowSeekAhead )\n    {\n        const {youtubePlayer} = this.state;\n        if( youtubePlayer )\n            youtubePlayer.seekTo( seconds, allowSeekAhead );\n    }\n\n    render () {\n        const { videoId, highlights, youtubeOpts, loading } = this.state;\n        return <TheaterPresenter highlights={highlights}\n                            videoId={videoId}\n                            youtubeReady={this.youtubeReady.bind(this)}\n                            youtubeSeekTo={this.youtubeSeekTo.bind(this)}\n                            youtubeOpts={youtubeOpts}\n                            loading={loading}\n        />\n    }\n}","import React from 'react'\nimport {BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport Header from 'Components/Header'\nimport Home from 'Routes/Home'\nimport Theater from 'Routes/Theater'\n\nexport default () => (\n    <Router>\n        <Header />\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/video/\" component={Theater} />\n    </Router>\n)","import {createGlobalStyle} from \"styled-components\"\nimport reset from \"styled-reset\"\n\n\nexport default createGlobalStyle`\n${reset}\n\nbody {\n    font-family: 'Noto Sans KR', sans-serif;\n}\n`","import React from 'react';\nimport Router from './Router'\nimport GlobalStyles from 'GlobalStyles'\n\nfunction App() {\n  return (<>\n    <Router />\n    <GlobalStyles />\n  </>);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}