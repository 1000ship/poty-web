{"version":3,"sources":["Components/Header.js","api.js","Components/VideoThumbnail.js","GlobalStyles.js","Components/Loading.js","Components/Error.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Theater/Highlight.js","Routes/Theater/TheaterPresenter.js","Routes/Theater/index.js","Routes/Theater/TheaterContainer.js","Components/Router.js","Components/App.js","serviceWorker.js","index.js"],"names":["HeaderContainer","styled","div","Title","Link","SearchInput","Input","withRouter","props","useState","searchTerm","setSearchTerm","history","location","pathname","useHistory","searchTo","push","encodeURI","Container","Row","Col","xs","to","onClick","InputGroup","value","onKeyDown","e","keyCode","onChange","target","color","InputGroupAddon","addonType","Button","outline","videoAxios","axios","create","baseURL","params","key","process","videoApi","maxResults","regionCode","get","part","chart","q","pageToken","type","highlightApi","videoId","data","testCase","ThumbnailLink","ThumbnailImage","img","id","thumbnailSrc","title","channelTitle","channelId","src","HeaderSpacer","createGlobalStyle","reset","Spinner","error","status","request","message","Alert","className","VideosContainer","HomePresenter","videos","loading","Loading","Error","length","map","video","i","snippet","thumbnails","localized","md","lg","VideoThumbnail","medium","url","HomeContainer","state","items","this","setState","React","Component","SearchTermDisplay","query","SearchContainer","match","loadData","prevProps","SearchPresenter","CommentContainer","CommentUserId","span","CommentText","CommentLikeCount","Comment","userId","likeCount","commentText","TimestampButton","a","Timestamp","LikeDisplay","Comments","Rank","Highlight","lastUpdate","rank","totalLikeCount","totalReplyComment","timestamp","comments","youtubeSeekTo","second","multiply","arr","split","Number","href","timestampToSecond","comment","TheaterPresenter","highlights","youtubeReady","youtubeOpts","xl","opts","onReady","xd","highlight","TheaterContainer","youtubePlayer","width","height","playerVars","autoplay","enablejsapi","modestbranding","pathArray","seconds","allowSeekAhead","seekTo","bind","path","exact","component","Home","Search","Theater","App","Router","GlobalStyles","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.2d3e2982.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { withRouter, Link, useHistory } from 'react-router-dom';\nimport { Container, Row, Col, Input, Button, InputGroup, InputGroupAddon } from 'reactstrap'\nimport styled from \"styled-components\";\n\nconst HeaderContainer = styled.div`\n    color: white;\n    background-color: #161616;\n    padding: 10px;\n    font-size: 30px;\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100vw;\n    z-index: 1;\n`\n\nconst Title = styled(Link)`\n    color: white;\n    transition: 0.3s;\n    font-weight: 500;\n    &:hover {\n        color: #ADADAD;\n        text-decoration: none;\n    }\n    display: inline-block;\n`\n\nconst SearchInput = styled(Input)`\n    background: unset;\n    color: #6c757d;\n    border-color: #6c757d;\n    &:focus {\n        background-color: unset;\n        color: #6c757d;\n    }\n`\n\nconst Header = props => {\n    const [searchTerm, setSearchTerm] = useState(\"\")\n    const { location : { pathname } } = props\n    const history = useHistory();\n\n    const updateTerm = (e) => {\n        setSearchTerm(e.target.value);\n    }\n    const searchTo = () => {\n        history.push(`/search/${encodeURI(searchTerm)}`)\n    }\n    const searchByEnter = (e) => {\n        const ENTER_KEY_CODE = 13\n        if( e.keyCode === ENTER_KEY_CODE )\n            searchTo();\n    }\n\n    return (\n    <HeaderContainer>\n        <Container>\n            <Row>\n                <Col xs=\"auto\">\n                    <Title to=\"/\" onClick={()=>setSearchTerm(\"\")}>POTY</Title>\n                </Col>\n                <Col>\n                    <InputGroup>\n                        <SearchInput value={searchTerm} onKeyDown={searchByEnter} onChange={updateTerm} color=\"secondary\"/>\n                        <InputGroupAddon addonType=\"append\">\n                            <Button onClick={searchTo} outline color=\"secondary\">검색</Button>\n                        </InputGroupAddon>\n                    </InputGroup>\n                </Col>\n            </Row>\n        </Container>\n    </HeaderContainer>\n)}\n\nexport default withRouter( Header )","import axios from 'axios'\nimport testCase from 'testCase.json'\n\nconst videoAxios = axios.create({\n    baseURL: \"https://www.googleapis.com/youtube/v3/\",\n    params: {\n        key: process.env.REACT_APP_YOUTUBE_API_KEY,\n    },\n});\n\nconst highlightAxios = axios.create({\n    baseURL: \"http://192.168.150.19:3000/\"\n})\n\nexport const videoApi = {\n    getVideos: ({maxResults, regionCode}) => videoAxios.get(\"videos\", {\n        params: {\n            part: \"id,snippet\",\n            chart: \"mostPopular\",\n            maxResults,\n            regionCode\n        }\n    }),\n    //https://www.googleapis.com/youtube/v3/search?key=AIzaSyCW_MCH2iNnoVle1hfDrOe_iA2jk-7m_qM&part=id,snippet&q=미역국\n    searchVideos: ({q, maxResults, pageToken, regionCode}) => videoAxios.get(\"search\", {\n        params: {\n            part: \"id,snippet\",\n            type: \"video\",\n            q, maxResults, pageToken, regionCode\n        }\n    })\n}\n\nexport const highlightApi = {\n    getHighlights_Test: (videoId) => highlightAxios.get(),\n    getHighlights: ( videoId ) => {return {data:testCase}},\n}","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nconst ThumbnailLink = styled(Link)`\n    color: unset;\n    font-size: 13px;\n    &:hover {\n        color: unset;\n        text-decoration: unset;\n    }\n`\n\nconst Container = styled.div`\n    width: 100%;\n    margin: 5px 0px;\n`\n\nconst ThumbnailImage = styled.img`\n    width: 100%;\n`\n\nexport default ( {id, thumbnailSrc, title, channelId, channelTitle} ) => (\n<Container>\n    <ThumbnailLink to={`/video/${id}`}>\n        <ThumbnailImage src={thumbnailSrc}/>\n        <div>{title}</div>\n        <div>{channelTitle}</div>\n    </ThumbnailLink>\n</Container>\n)","import styled, {createGlobalStyle} from \"styled-components\"\nimport reset from \"styled-reset\"\n\nexport const HeaderSpacer = styled.div`\n    width: 100%;\n    height: 58px;\n`\n\nexport default createGlobalStyle`\n${reset}\n\nbody {\n    font-family: 'Noto Sans KR', sans-serif;\n    background-color: black;\n    color: #EFEFEF;\n}\n`","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from 'reactstrap'\n\nconst Container = styled.div`\n    width: 100%;\n    height: 100%;\n    padding: 200px;\n    text-align: center;\n    align-items: center;\n`\n\nexport default () => {\n    return (\n        <Container>\n            <Spinner color=\"light\"/>\n        </Container>\n    )\n}","import React from 'react'\nimport styled from 'styled-components'\nimport { Alert } from 'reactstrap'\n\nconst Container = styled.div`\n    width: 100%;\n    height: 100%;\n    padding: 100px;\n    text-align: center;\n`\n\nexport default ({error}) => {\n    const {request:{status}, message} = error\n    return (\n        <Container>\n            <Alert color=\"dark\">\n                <h4 className=\"alert-heading\">Error {status}</h4>\n                <p>{message}</p>\n            </Alert>\n        </Container>\n    )\n}","import React from 'react'\nimport styled from 'styled-components'\nimport VideoThumbnail from 'Components/VideoThumbnail'\nimport { Container, Row, Col } from 'reactstrap'\nimport { HeaderSpacer } from 'GlobalStyles'\nimport Loading from 'Components/Loading'\nimport Error from 'Components/Error'\n\nconst VideosContainer = styled(Row)`\n`\n\nconst HomePresenter = ({videos, loading, error}) => loading ? (<Loading/>) : (\n    <Container>\n        <HeaderSpacer></HeaderSpacer>\n        <VideosContainer>\n        {error && <Error error={error}/>}\n        {videos && videos.length > 0 && videos.map( (video, i) => {\n                const {id, snippet:{thumbnails, localized, channelId, channelTitle}} = video\n                return <Col xs=\"6\" md=\"4\" lg=\"3\" key={i}>\n                    <VideoThumbnail\n                        id={id}\n                        thumbnailSrc={thumbnails.medium.url}\n                        title={localized.title}\n                        channelId={channelId}\n                        channelTitle={channelTitle}\n                    ></VideoThumbnail>\n                </Col>\n                }\n            )\n        }\n        </VideosContainer>\n    </Container>\n)\n\nexport default HomePresenter","import React from 'react'\nimport HomeContainer from './HomeContainer'\n\nexport default HomeContainer","import React from 'react'\nimport { videoApi } from 'api'\nimport HomePresenter from './HomePresenter'\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            videos: [],\n            loading: true,\n            error: null\n        }\n    }\n\n    async componentDidMount() {\n        try{\n            const {data: {items: videos}} = await videoApi.getVideos({\n                maxResults: 12,\n            })\n            this.setState({videos})\n        }\n        catch(error) {\n            this.setState({\n                error\n            })\n        }\n        finally {\n            this.setState({\n                loading: false\n            })\n        }\n    }\n\n    render() {\n        const {videos, loading, error} = this.state\n        return <HomePresenter \n                    videos={videos}\n                    loading={loading}\n                    error={error}/>\n    }\n}","import React from 'react'\nimport styled from 'styled-components'\nimport VideoThumbnail from 'Components/VideoThumbnail'\nimport { Container, Row, Col } from 'reactstrap'\nimport { HeaderSpacer } from 'GlobalStyles'\nimport Loading from 'Components/Loading'\nimport Error from 'Components/Error'\n\nconst SearchTermDisplay = styled.div`\n    padding-top: 20px;\n`\n\nconst HomePresenter = ({query, videos, loading, error}) => loading ? (<Loading/>) : (\n    <Container>\n        <Row>\n            <HeaderSpacer></HeaderSpacer>\n        </Row>\n        <Row>\n            <Col>\n                <SearchTermDisplay>Search for {query}</SearchTermDisplay>\n            </Col>\n        </Row>\n        <Row>\n        {error && <Error error={error}/>}\n        {videos && videos.length > 0 && videos.map( (video, i) => {\n                const {id:{videoId}, snippet:{thumbnails, title, channelId, channelTitle}} = video\n                return <Col xs=\"6\" md=\"4\" lg=\"3\" key={i}>\n                    <VideoThumbnail\n                        id={videoId}\n                        thumbnailSrc={thumbnails.medium.url}\n                        title={title}\n                        channelId={channelId}\n                        channelTitle={channelTitle}\n                    ></VideoThumbnail>\n                </Col>\n                }\n            )\n        }\n        </Row>\n    </Container>\n)\n\nexport default HomePresenter","import React from 'react'\nimport SearchContainer from './SearchContainer'\n\nexport default SearchContainer","import React from 'react'\nimport { videoApi } from 'api'\nimport SearchPresenter from './SearchPresenter'\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            videos: [],\n            query: \"\",\n            loading: true,\n            error: null,\n        }\n    }\n\n    async loadData() {\n        const {match:{params:{query}}} = this.props\n        try{\n            this.setState({\n                loading: true,\n                error: null\n            })\n            const {data: {items: videos}} = await videoApi.searchVideos({\n                maxResults: 12,\n                q: query,\n            })\n            this.setState({videos})\n        }\n        catch(error) {\n            this.setState({error})\n        }\n        finally {\n            this.setState({\n                loading: false,\n                query\n            })\n        }\n    }\n\n    async componentDidMount() {\n        await this.loadData()\n    }\n\n    async componentDidUpdate(prevProps) {\n        if(prevProps.match.params.query !== this.props.match.params.query){\n            await this.loadData()\n        }\n    }     \n\n    render() {\n        const {query, videos, loading, error} = this.state\n        return <SearchPresenter \n                    query={query}\n                    videos={videos}\n                    loading={loading}\n                    error={error}/>\n    }\n}","import React from 'react'\nimport styled from 'styled-components'\nimport {Row, Col} from 'reactstrap'\n\nconst CommentContainer = styled.div`\n    margin-bottom: 10px;\n`\n\nconst CommentUserId = styled.span`\n    font-weight: 700;\n    font-size: 15px;\n    line-height: 1.1;\n    margin-right: 5px;\n`\n\nconst CommentText = styled.span`\n    font-size: 13px;\n`\n\nconst CommentLikeCount = styled.div`\n    font-weight: 500;\n    font-size: 12px;\n    color: #888;\n    margin-left: 5px;\n`\n\nconst Comment = ({userId, likeCount, commentText}) => {\n    return <CommentContainer>\n        <CommentUserId>{userId}</CommentUserId>\n        <CommentText>{commentText}</CommentText>\n        <CommentLikeCount>👍{likeCount}</CommentLikeCount>\n    </CommentContainer>\n}\n\nconst Container = styled.div`\n    margin: 15px 3px;\n`\n\nconst TimestampButton = styled.a`\n    &:hover {\n        text-decoration: none;\n    }\n`\n\nconst Timestamp = styled.span`\n    color: #5d9cec;\n    font-weight: 600;\n    font-size: 20px;\n    margin-bottom: 3px;\n    margin-right: 5px;\n`\n\nconst LikeDisplay = styled.span`\n    font-weight: 500;\n    color: #888;\n`\n\nconst Comments = styled.div`\n    margin-left: 10px;\n    margin-top: 10px;\n`\n\nconst Rank = styled.span`\n    margin-right: 5px;\n    font-size: 18px;\n    font-weight: 600;\n`\n\nclass Highlight extends React.Component {\n    constructor( props )\n    {\n        super( props )\n        this.state = {\n            videoId: props.videoId,\n            lastUpdate: props.lastUpdate,\n            rank: props.rank,\n            totalLikeCount: props.totalLikeCount,\n            totalReplyComment: props.totalReplyComment,\n            timestamp: props.timestamp,\n            comments: props.comments,\n            youtubeSeekTo: props.youtubeSeekTo,\n        }\n    }\n\n    timestampToSecond ( timestamp )\n    {\n        let second = 0\n        let multiply = 1\n        let arr = timestamp.split(\":\")\n        for( let i = arr.length - 1; i >= 0; -- i )\n        {\n            second += multiply * Number(arr[i])\n            multiply *= 60\n        }\n        return second\n    }\n\n    render () {\n        const { videoId, lastUpdate, rank, totalLikeCount, totalReplyComment, timestamp, comments, youtubeSeekTo } = this.state\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <Rank>{rank}위</Rank>\n                        <TimestampButton href=\"javascript:void(0);\" onClick={(e)=>youtubeSeekTo(this.timestampToSecond(timestamp), true)}>\n                            <Timestamp>\n                                {timestamp}\n                            </Timestamp>\n                        </TimestampButton>\n                        <LikeDisplay>\n                            {`👍${totalLikeCount}`}\n                        </LikeDisplay>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Comments>\n                            {comments.map( (comment,i) => \n                                <Comment\n                                    key={i}\n                                    userId={comment.userId}\n                                    likeCount={comment.likeCount}\n                                    commentText = {comment.commentText}\n                                ></Comment>\n                            )}\n                        </Comments>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default Highlight","import React from 'react'\nimport {Container, Row, Col} from 'reactstrap'\nimport styled from \"styled-components\";\nimport YouTube from 'react-youtube';\nimport Highlight from './Highlight'\nimport {HeaderSpacer} from 'GlobalStyles'\nimport Error from 'Components/Error';\n\nconst TheaterPresenter = ( {videoId, highlights, youtubeSeekTo, youtubeReady, youtubeOpts, loading, error } ) => (\n    <Container className=\"pt-2\">\n        <HeaderSpacer/>\n        { error && <Error error={error}/> }\n        <Row>\n            <Col xs=\"12\" lg=\"8\" xl=\"9\">\n                <div className=\"embed-responsive embed-responsive-16by9\">\n                    {loading ? <>Now Loading</> : (\n                        <YouTube videoId={videoId} opts={youtubeOpts} onReady={youtubeReady}/>\n                    )}\n                </div>\n            </Col>\n            <Col xd=\"12\" lg=\"4\" xl=\"3\">\n                { highlights && \n                    highlights.map( (highlight,i) =>\n                        <Highlight \n                            key={i}\n                            videoId={highlight.videoId}\n                            lastUpdate={highlight.lastUpdate}\n                            rank={highlight.rank}\n                            totalLikeCount={highlight.totalLikeCount}\n                            totalReplyComment={highlight.totalReplyComment}\n                            timestamp={highlight.timestamp}\n                            comments={highlight.comments}\n                            youtubeSeekTo={youtubeSeekTo}\n                        />\n                    )\n                }\n            </Col>\n        </Row>\n        <Row>\n            <Col xs=\"12\">\n                {/* Comments List */}\n            </Col>\n        </Row>\n    </Container>\n)\n\nexport default TheaterPresenter;","import TheaterContainer from './TheaterContainer'\n\nexport default TheaterContainer","import React from 'react'\nimport TheaterPresenter from './TheaterPresenter'\nimport {highlightApi} from 'api'\n\nexport default class extends React.Component {\n\n    state = {\n        videoId: \"\",\n        highlights: [],\n        youtubePlayer: null,\n        youtubeOpts: {\n            width: \"100%\",\n            height: \"100%\",\n            playerVars: {\n                // https://developers.google.com/youtube/player_parameters\n                autoplay: 1,\n                enablejsapi: 1,\n                modestbranding: 1,\n                // rel: 0,\n                // showinfo: 0,\n                // playlist: [],\n            },\n        },\n        loading: true,\n        error: null\n    }\n\n    constructor ( props ) {\n        super(props)\n    }\n\n    async componentDidMount(props) {\n        const {location: {pathname}} = this.props\n        const pathArray = pathname.split('/')\n        const videoId = pathArray[pathArray.length-1]\n        \n        try {\n            const {data:{lastUpdate, highlights}} = await highlightApi.getHighlights(videoId)\n            this.setState({\n                highlights, lastUpdate, videoId\n            })\n        }\n        catch(error) {\n            this.setState({error})\n        }\n        finally {\n            this.setState({\n                loading: false\n            })\n        }\n    }\n\n    youtubeReady ( e )\n    {\n        this.setState( {\n            youtubePlayer: e.target\n        })\n    }\n\n    youtubeSeekTo ( seconds, allowSeekAhead )\n    {\n        const {youtubePlayer} = this.state;\n        if( youtubePlayer )\n            youtubePlayer.seekTo( seconds, allowSeekAhead );\n    }\n\n    render () {\n        const { videoId, highlights, youtubeOpts, loading, error } = this.state;\n        return <TheaterPresenter \n                            videoId={videoId}\n                            highlights={highlights}\n                            youtubeReady={this.youtubeReady.bind(this)}\n                            youtubeSeekTo={this.youtubeSeekTo.bind(this)}\n                            youtubeOpts={youtubeOpts}\n                            loading={loading}\n                            error={error}\n        />\n    }\n}","import React from 'react'\nimport {HashRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport Header from 'Components/Header'\nimport Home from 'Routes/Home'\nimport Search from 'Routes/Search'\nimport Theater from 'Routes/Theater'\n\nexport default () => (\n    <Router>\n        <Header />\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/search/:query\" component={Search} />\n        <Route path=\"/video/\" component={Theater} />\n    </Router>\n)","import React from 'react';\nimport Router from './Router'\nimport GlobalStyles from 'GlobalStyles'\n\nfunction App() {\n  return (<>\n    <Router />\n    <GlobalStyles />\n  </>);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}