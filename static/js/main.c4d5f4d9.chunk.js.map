{"version":3,"sources":["Components/Header.js","api.js","Components/VideoThumbnail.js","GlobalStyles.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Theater/Highlight.js","Routes/Theater/TheaterPresenter.js","Routes/Theater/index.js","Routes/Theater/TheaterContainer.js","Components/Router.js","Components/App.js","serviceWorker.js","index.js"],"names":["HeaderContainer","styled","div","Title","Link","withRouter","props","location","pathname","Container","Row","Col","to","videoAxios","axios","create","baseURL","params","key","process","videoApi","maxResults","regionCode","get","part","chart","highlightApi","videoId","data","testCase","ThumbnailLink","ThumbnailImage","img","id","thumbnailSrc","title","channelTitle","channelId","src","HeaderSpacer","createGlobalStyle","reset","VideosContainer","HomePresenter","videos","loading","length","map","video","i","snippet","thumbnails","localized","xs","md","lg","VideoThumbnail","medium","url","HomeContainer","state","items","this","setState","React","Component","CommentContainer","CommentUserId","span","CommentText","CommentLikeCount","Comment","userId","likeCount","commentText","TimestampButton","a","Timestamp","LikeDisplay","Comments","Rank","Highlight","lastUpdate","rank","totalLikeCount","totalReplyComment","timestamp","comments","youtubeSeekTo","second","multiply","arr","split","Number","href","onClick","e","timestampToSecond","comment","TheaterPresenter","floatingVideo","highlights","youtubeReady","youtubeOpts","className","xl","opts","onReady","xd","highlight","TheaterContainer","youtubePlayer","width","height","playerVars","autoplay","enablejsapi","modestbranding","window","scrollY","pathArray","addEventListener","onScrollEvent","bind","console","log","target","seconds","allowSeekAhead","seekTo","path","exact","component","Home","Theater","App","Router","GlobalStyles","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c4d5f4d9.chunk.js","sourcesContent":["import React from 'react'\nimport { withRouter, Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap'\nimport styled from \"styled-components\";\n\nconst HeaderContainer = styled.div`\n    color: white;\n    background-color: #161616;\n    padding: 10px;\n    font-size: 30px;\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100vw;\n    z-index: 1;\n`\n\nconst Title = styled(Link)`\n    color: white;\n    transition: 0.3s;\n    font-weight: 500;\n    &:hover {\n        color: #ADADAD;\n        text-decoration: none;\n    }\n`\n\nconst Header = props => {\n    const { location : { pathname } } = props\n    return (\n    <HeaderContainer>\n        <Container>\n            <Row>\n                <Col>\n                    <Title to=\"/\">POTY</Title>\n                </Col>\n            </Row>\n        </Container>\n    </HeaderContainer>\n)}\n\nexport default withRouter( Header )","import axios from 'axios'\nimport testCase from 'testCase.json'\n\nconst videoAxios = axios.create({\n    baseURL: \"https://www.googleapis.com/youtube/v3/\",\n    params: {\n        key: process.env.REACT_APP_YOUTUBE_API_KEY,\n    },\n});\n\nconst highlightAxios = axios.create({\n    baseURL: \"http://192.168.150.19:3000/\"\n})\n\nexport const videoApi = {\n    getVideos: ({maxResults, regionCode}) => videoAxios.get(\"videos\", {\n        params: {\n            part: \"id,snippet\",\n            chart: \"mostPopular\",\n            maxResults,\n            regionCode\n        }\n    }),\n}\n\nexport const highlightApi = {\n    getHighlights_Test: (videoId) => highlightAxios.get(),\n    getHighlights: ( videoId ) => {return {data:testCase}},\n}","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nconst ThumbnailLink = styled(Link)`\n    color: unset;\n    font-size: 13px;\n    &:hover {\n        color: unset;\n        text-decoration: unset;\n    }\n`\n\nconst Container = styled.div`\n    width: 100%;\n    margin: 5px 0px;\n`\n\nconst ThumbnailImage = styled.img`\n    width: 100%;\n`\n\nexport default ( {id, thumbnailSrc, title, channelId, channelTitle} ) => (\n<Container>\n    <ThumbnailLink to={`/video/${id}`}>\n        <ThumbnailImage src={thumbnailSrc}/>\n        <div>{title}</div>\n        <div>{channelTitle}</div>\n    </ThumbnailLink>\n</Container>\n)","import styled, {createGlobalStyle} from \"styled-components\"\nimport reset from \"styled-reset\"\n\nexport const HeaderSpacer = styled.div`\n    width: 100%;\n    height: 50px;\n`\n\nexport default createGlobalStyle`\n${reset}\n\nbody {\n    font-family: 'Noto Sans KR', sans-serif;\n    background-color: black;\n    color: #EFEFEF;\n}\n`","import React from 'react'\nimport styled from 'styled-components'\nimport VideoThumbnail from 'Components/VideoThumbnail'\nimport { Container, Row, Col } from 'reactstrap'\nimport { HeaderSpacer } from 'GlobalStyles'\n\n\nconst VideosContainer = styled(Row)`\n`\n\nconst HomePresenter = ({videos, loading}) => loading ? (<h1>Loading</h1>) : (\n    <Container>\n        <HeaderSpacer></HeaderSpacer>\n        <VideosContainer>\n        {videos && videos.length > 0 && videos.map( (video, i) => {\n                const {id, snippet:{thumbnails, localized, channelId, channelTitle}} = video\n                return <Col xs=\"6\" md=\"4\" lg=\"3\" key={i}>\n                    <VideoThumbnail\n                        id={id}\n                        thumbnailSrc={thumbnails.medium.url}\n                        title={localized.title}\n                        channelId={channelId}\n                        channelTitle={channelTitle}\n                    ></VideoThumbnail>\n                </Col>\n                }\n            )\n        }\n        </VideosContainer>\n    </Container>\n)\n\nexport default HomePresenter","import React from 'react'\nimport HomeContainer from './HomeContainer'\n\nexport default HomeContainer","import React from 'react'\nimport { videoApi } from 'api'\nimport HomePresenter from './HomePresenter'\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            videos: [],\n            loading: true\n        }\n    }\n\n    async componentDidMount() {\n        try{\n            const {data: {items: videos}} = await videoApi.getVideos({\n                maxResults: 24,\n            })\n            this.setState({videos})\n        }\n        catch {\n\n        }\n        finally {\n            this.setState({\n                loading: false\n            })\n        }\n    }\n\n    render() {\n        const {videos, loading} = this.state\n        return <HomePresenter \n                    videos={videos}\n                    loading={loading}/>\n    }\n}","import React from 'react'\nimport styled from 'styled-components'\nimport {Row, Col} from 'reactstrap'\n\nconst CommentContainer = styled.div`\n    margin-bottom: 10px;\n`\n\nconst CommentUserId = styled.span`\n    font-weight: 700;\n    font-size: 15px;\n    line-height: 1.1;\n    margin-right: 5px;\n`\n\nconst CommentText = styled.span`\n    font-size: 13px;\n`\n\nconst CommentLikeCount = styled.div`\n    font-weight: 500;\n    font-size: 12px;\n    color: #888;\n    margin-left: 5px;\n`\n\nconst Comment = ({userId, likeCount, commentText}) => {\n    return <CommentContainer>\n        <CommentUserId>{userId}</CommentUserId>\n        <CommentText>{commentText}</CommentText>\n        <CommentLikeCount>👍{likeCount}</CommentLikeCount>\n    </CommentContainer>\n}\n\nconst Container = styled.div`\n    margin: 15px 3px;\n`\n\nconst TimestampButton = styled.a`\n    &:hover {\n        text-decoration: none;\n    }\n`\n\nconst Timestamp = styled.span`\n    color: #5d9cec;\n    font-weight: 600;\n    font-size: 20px;\n    margin-bottom: 3px;\n    margin-right: 5px;\n`\n\nconst LikeDisplay = styled.span`\n    font-weight: 500;\n    color: #888;\n`\n\nconst Comments = styled.div`\n    margin-left: 10px;\n    margin-top: 10px;\n`\n\nconst Rank = styled.span`\n    margin-right: 5px;\n    font-size: 18px;\n    font-weight: 600;\n`\n\nclass Highlight extends React.Component {\n    constructor( props )\n    {\n        super( props )\n        this.state = {\n            videoId: props.videoId,\n            lastUpdate: props.lastUpdate,\n            rank: props.rank,\n            totalLikeCount: props.totalLikeCount,\n            totalReplyComment: props.totalReplyComment,\n            timestamp: props.timestamp,\n            comments: props.comments,\n            youtubeSeekTo: props.youtubeSeekTo,\n        }\n    }\n\n    timestampToSecond ( timestamp )\n    {\n        let second = 0\n        let multiply = 1\n        let arr = timestamp.split(\":\")\n        for( let i = arr.length - 1; i >= 0; -- i )\n        {\n            second += multiply * Number(arr[i])\n            multiply *= 60\n        }\n        return second\n    }\n\n    render () {\n        const { videoId, lastUpdate, rank, totalLikeCount, totalReplyComment, timestamp, comments, youtubeSeekTo } = this.state\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <Rank>{rank}위</Rank>\n                        <TimestampButton href=\"javascript:void(0);\" onClick={(e)=>youtubeSeekTo(this.timestampToSecond(timestamp), true)}>\n                            <Timestamp>\n                                {timestamp}\n                            </Timestamp>\n                        </TimestampButton>\n                        <LikeDisplay>\n                            {`👍${totalLikeCount}`}\n                        </LikeDisplay>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Comments>\n                            {comments.map( (comment,i) => \n                                <Comment\n                                    key={i}\n                                    userId={comment.userId}\n                                    likeCount={comment.likeCount}\n                                    commentText = {comment.commentText}\n                                ></Comment>\n                            )}\n                        </Comments>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default Highlight","import React from 'react'\nimport {Container, Row, Col} from 'reactstrap'\nimport styled from \"styled-components\";\nimport YouTube from 'react-youtube';\nimport Highlight from './Highlight'\nimport {HeaderSpacer} from 'GlobalStyles'\n\nconst TheaterPresenter = ( { floatingVideo, videoId, highlights, youtubeSeekTo, youtubeReady, youtubeOpts, loading } ) => (\n    <Container className=\"pt-2\">\n        <HeaderSpacer/>\n        <Row>\n            <Col xs=\"12\" lg=\"8\" xl=\"9\">\n                <div className=\"embed-responsive embed-responsive-16by9\">\n                    {loading ? <>Now Loading</> : (\n                        <YouTube videoId={videoId} opts={youtubeOpts} onReady={youtubeReady}/>\n                    )}\n                </div>\n            </Col>\n            <Col xd=\"12\" lg=\"4\" xl=\"3\">\n                { highlights && \n                    highlights.map( (highlight,i) =>\n                        <Highlight \n                            key={i}\n                            videoId={highlight.videoId}\n                            lastUpdate={highlight.lastUpdate}\n                            rank={highlight.rank}\n                            totalLikeCount={highlight.totalLikeCount}\n                            totalReplyComment={highlight.totalReplyComment}\n                            timestamp={highlight.timestamp}\n                            comments={highlight.comments}\n                            youtubeSeekTo={youtubeSeekTo}\n                        />\n                    )\n                }\n            </Col>\n        </Row>\n        <Row>\n            <Col xs=\"12\">\n                Comments List\n            </Col>\n        </Row>\n    </Container>\n)\n\nexport default TheaterPresenter;","import TheaterContainer from './TheaterContainer'\n\nexport default TheaterContainer","import React from 'react'\nimport TheaterPresenter from './TheaterPresenter'\nimport {highlightApi} from 'api'\n\nexport default class extends React.Component {\n\n    state = {\n        floatingVideo: false,\n        videoId: \"\",\n        highlights: [],\n        youtubePlayer: null,\n        youtubeOpts: {\n            width: \"100%\",\n            height: \"100%\",\n            playerVars: {\n                // https://developers.google.com/youtube/player_parameters\n                autoplay: 1,\n                enablejsapi: 1,\n                modestbranding: 1,\n                // rel: 0,\n                // showinfo: 0,\n                // playlist: [],\n            },\n        },\n        loading: true,\n    }\n\n    constructor ( props ) {\n        super(props)\n    }\n\n    onScrollEvent(e) {\n        if( !this.state ) return;\n        if( this.state.floatingVideo == false || window.scrollY > 0 )   \n            this.setState({floatingVideo: true})\n        else if( this.state.floatingVideo || window.scrollY == 0 )\n            this.setState({floatingVideo: false})\n    }\n\n    async componentDidMount(props) {\n        const {location: {pathname}} = this.props\n        const pathArray = pathname.split('/')\n        const videoId = pathArray[pathArray.length-1]\n        \n        try {\n            const {data:{lastUpdate, highlights}} = await highlightApi.getHighlights(videoId)\n            this.setState({\n                highlights, lastUpdate, videoId\n            })\n            window.addEventListener(\"scroll\", this.onScrollEvent.bind(this));\n        }\n        catch ( e ) {\n            console.log(\"error in theater container js\");\n        }\n        finally {\n            this.setState({\n                loading: false\n            })\n        }\n    }\n\n    youtubeReady ( e )\n    {\n        this.setState( {\n            youtubePlayer: e.target\n        })\n    }\n\n    youtubeSeekTo ( seconds, allowSeekAhead )\n    {\n        const {youtubePlayer} = this.state;\n        if( youtubePlayer )\n            youtubePlayer.seekTo( seconds, allowSeekAhead );\n    }\n\n    render () {\n        const { floatingVideo, videoId, highlights, youtubeOpts, loading } = this.state;\n        return <TheaterPresenter \n                            floatingVideo={floatingVideo}\n                            videoId={videoId}\n                            highlights={highlights}\n                            youtubeReady={this.youtubeReady.bind(this)}\n                            youtubeSeekTo={this.youtubeSeekTo.bind(this)}\n                            youtubeOpts={youtubeOpts}\n                            loading={loading}\n        />\n    }\n}","import React from 'react'\nimport {HashRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport Header from 'Components/Header'\nimport Home from 'Routes/Home'\nimport Theater from 'Routes/Theater'\n\nexport default () => (\n    <Router>\n        <Header />\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/video/\" component={Theater} />\n    </Router>\n)","import React from 'react';\nimport Router from './Router'\nimport GlobalStyles from 'GlobalStyles'\n\nfunction App() {\n  return (<>\n    <Router />\n    <GlobalStyles />\n  </>);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}